/*

  Perfect numbers in Picat.

  See http://rosettacode.org/wiki/Perfect_numbers
  """
  A number is perfect if the sum of its factors is equal to 
  twice the number. An equivalent condition is that n is perfect 
  if the sum of n's factors that are less than n is equal to n. 
  """

  Model created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

main => go.

go => 

   % print the first 50 perfect numbers
   println(perfect_n(50)),

   % perfect numbers generated by the primes below < 100
   PP=[[P,perfectf(P)] : P in primes(100)],
   println(PP),
   println(len=PP.length),

   nl.


go2 => 
  %
  % It takes about 0.07s to generate the first 1000 
  % perfect numbers.
  % 
  time(P=perfect_n(1000)),
  println(len=P.length),
  time(Last=P.last()),
  println(last=Last),
  nl.

%
% using the traditional definition
%
go3 =>
    
   println([I : I in 1..10000, perfect(I)]),
   nl.

go4 =>
   
   foreach(I in 1..524288) 
     if perfect(I) then
       println(I)
     end,
     if I mod 1000 == 0 then
       print("."),
       flush(stdout)
     end,
     if I mod 10000 == 0 then
       print("\n"),
       flush(stdout)
     end
   end,
   nl.


% 
% using formula for perfect numbers: 2^(p-1)*(2^p-1) where p is a prime
%
perfect_n(N) = Perfect =>
  Perfect1 = [],
  C = 0, P = 2,
  while(C < N)
    if prime(P) then
      Perfect1 := Perfect1 ++ [perfectf(P)],
      C := C + 1 
    end,
    P := P + 1
  end,
  Perfect = Perfect1.

% the formula
perfectf(P) = (2**(P-1))*((2**P)-1).


perfect(N) => sum(divisors(N)) == N.


divisors(N) = [J: J in 1..1+N div 2, N mod J == 0].


