/*

  Palindrome detection in Picat.

  http://rosettacode.org/wiki/Palindrome_detection
  """
  Write at least one function/method (or whatever it is called in 
  your preferred language) to check if a sequence of characters (or bytes) 
  is a palindrome or not. The function must return a boolean value 
  (or something that can be used as boolean value, like an integer). 
  """


  Model created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/


main => go.

go =>
   Strings = ["In girum imus nocte et consumimur igni", 
              "this is a non palindrome string",
              "anna ABcdcBA anna",
              "anna ABcdcBA annax",
              "A man, a plan, a canoe, pasta, heros, rajahs" ++
              "a coloratura, maps, snipe, percale, macaroni, " ++
              "a gag, a banana bag, a tan, a tag, " ++
              "a banana bag again (or a camel), a crepe, pins, " ++
              "Spam, a rut, a Rolo, cash, a jar, sore hats, " ++
              "a peon, a canal - Panama!"
           ],

   foreach(S in Strings) 
     if is_palindrome(S) then
        println([S, "yes"])
     else
        println([S, "no"])
     end
   end,
   nl.



is_palindrome(S) => 
    S2 = strip2(S),
    S2 = S2.reverse().

% lowercase and strip everythin except a..z
strip(S) = V =>
   V = [],
   Alpha = "abcdefghijklmnopqrstuvwxyz",
   foreach(C in S.to_lowercase()) 
      if member(C,Alpha) then
         V := V ++ [C]
      end
   end.

% Using list comprehension instead.
% Must use the helper predicate in2/2 since it don't work to have
%   Val in List as a condition.
strip2(S) = [C : C in S.to_lowercase(), C.in2("abcdefghijklmnopqrstuvwxyz")].

in2(Val, List) => member(Val, List).
