/*

  Towers of Hanoi Picat.

  From Rosetta code: 
  http://rosettacode.org/wiki/Towers_of_Hanoi
  """
  In this task, the goal is to solve the Towers of Hanoi problem 
  with recursion. 
  """

  Model created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

main => go.

go => 
   Print1 = 1,
   hanoi(4,Print1),
   nl,
   Print2 = 0,
   hanoi(24,Print2),
   nl.

go2 =>
   time(hanoi(10,1)),
   nl.

hanoi(N, Print) => 
   printf("N=%d\n", N),
   Count = move(N, left, center, right, Print, 1) ,
   printf("count=%d, theoretical=%d\n", Count, 2**N-1),
   nl.

move(0, _From, _To, _Via, _Print, _Count) = 0 => true.
table
move(N, From, To, Via, Print, Count) = Count1 => 
    Count1 := Count + move(N - 1, From, Via, To, Print, Count),
    if Print == 1 then
       printf("Move disk %w from pole %w to pole %w\n", N, From, To)
    end,
    Count1 := Count1 + move(N - 1, Via, To, From, Print, Count).

